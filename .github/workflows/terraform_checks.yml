name: 'Terraform validations'

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TERRAFORM_VERSION: 0.13.5

jobs:
  terraform_plan:
    name: Terraform validations
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: 'Use Node.js 12.x'
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: 'Use terraform ${{ env.TERRAFORM_VERSION }}'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: 'Terraform fmt'
        run: terraform fmt
        id: fmt

      - name: 'Terraform init'
        run: terraform init
        id: init

      - name: 'Terraform validate'
        run: terraform validate -no-color
        id: validate

      - name: 'Terraform plan'
        run: terraform plan -no-color
        id: plan

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
